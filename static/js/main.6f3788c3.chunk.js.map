{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/ThierMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","type","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","ThierMessage","lastMessage","isFirstMessageByuser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","e","required","align","App","getItem","userSecret","projectID","renderChatFeed","chatAppProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f3788c3.chunk.js","sourcesContent":["import { PictureOutlined, SendOutlined } from \"@ant-design/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { isTyping, sendMessage } from \"react-chat-engine\";\r\n\r\nconst MessageForm = (props) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const { chatId, creds } = props;\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const text = value.trim();\r\n\r\n    if (text.length > 0) sendMessage(creds, chatId, { text });\r\n    setValue(\"\");\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    isTyping(props, chatId);\r\n  };\r\n\r\n  const handleUpload = (event) => {\r\n    sendMessage(creds, chatId, { files: event.target.files, text: \"\" });\r\n  };\r\n\r\n  return (\r\n    <form className=\"message-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"message-input\"\r\n        type=\"text\"\r\n        placeholder=\"send a message\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n      <label htmlFor=\"upload-button\">\r\n        <span className=\"image-button\">\r\n          <PictureOutlined className=\"picture-outline\" />\r\n        </span>\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        multiple={false}\r\n        id=\"upload-button\"\r\n        style={{ display: \"none\" }}\r\n        onChange={handleUpload}\r\n      />\r\n      <button type=\"submit\" className=\"send-button\">\r\n        <SendOutlined className=\"send-icon\" />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n","import React from \"react\";\r\n\r\nconst MyMessage = ({ message }) => {\r\n  if (message?.attachments?.length > 0) {\r\n    return (\r\n      <img\r\n        src={message.attachments[0].file}\r\n        alt=\"message-attachments\"\r\n        className=\"message-image\"\r\n        style={{ float: \"right\" }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      className=\"message\"\r\n      style={{\r\n        float: \"right\",\r\n        marginRight: \"18px\",\r\n        color: \"white\",\r\n        backgroundColor: \"#3B2A50\",\r\n      }}\r\n    >\r\n      {message.text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMessage;\r\n","import React from \"react\";\r\n\r\nconst ThierMessage = ({ lastMessage, message }) => {\r\n  const isFirstMessageByuser =\r\n    !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n  return (\r\n    <div className=\"message-row\">\r\n      {isFirstMessageByuser && (\r\n        <div\r\n          className=\"message-avatar\"\r\n          style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\r\n        />\r\n      )}\r\n      {message?.attachments?.length > 0 ? (\r\n        <img\r\n          src={message.attachments[0].file}\r\n          alt=\"message-attachments\"\r\n          className=\"message-image\"\r\n          style={{ marginLeft: isFirstMessageByuser ? '4px':'48px' }}\r\n        />\r\n      ) : (\r\n        <div\r\n          className=\"message\"\r\n          style={{\r\n            float: \"left\",\r\n            marginLeft: isFirstMessageByuser ? '4px':'48px',\r\n            backgroundColor: \"#CABCDC\",\r\n          }}\r\n        >\r\n          {message.text}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThierMessage;\r\n","import MessageForm from \"./MessageForm\";\r\nimport MyMessage from \"./MyMessage\";\r\nimport ThierMessage from \"./ThierMessage\";\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReceipts = (message, isMyMessage) => {\r\n    return chat.people.map(\r\n      (person, index) =>\r\n        person.last_read === message.id && (\r\n          <div\r\n            key={`read_${index}`}\r\n            className=\"read-receipt\"\r\n            style={{\r\n              float: isMyMessage ? \"right\" : \"left\",\r\n              backgroundImage: `url(${person?.person?.avatar})`,\r\n            }}\r\n          />\r\n        )\r\n    );\r\n  };\r\n\r\n  // console.log(chat,userName,messages);\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n\r\n    // console.log(keys);\r\n\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: \"100%\" }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage ? (\r\n              <MyMessage message={message} />\r\n            ) : (\r\n              <ThierMessage\r\n                message={message}\r\n                lastMessage={message[lastMessageKey]}\r\n              />\r\n            )}\r\n          </div>\r\n          <div\r\n            className=\"read-receipt\"\r\n            style={{\r\n              marginRight: isMyMessage ? \"18px\" : \"0px\",\r\n              marginLeft: isMyMessage ? \"0px\" : \"68px\",\r\n            }}\r\n          >\r\n            {renderReadReceipts(message, isMyMessage)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!chat) return \"Loading...\";\r\n\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => `${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessages()}\r\n      <div style={{ height: \"100px\" }} />\r\n      <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatFeed;\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const authObject = {\r\n      \"Project-ID\": \"ab8d140c-2da4-4334-9022-e176440b11ac\",\r\n      \"User-Name\": username,\r\n      \"User-Secret\": password,\r\n    };\r\n\r\n    try {\r\n      await axios.get(\"https://api.chatengine.io/chats\", {\r\n        headers: authObject,\r\n      });\r\n\r\n      localStorage.setItem(\"username\", username);\r\n      localStorage.setItem(\"password\", password);\r\n\r\n      window.location.reload();\r\n    } catch (error) {\r\n      setError(\"Incorrect Credentials!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"title\">Chat Application</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"username\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"password\"\r\n            required\r\n          />\r\n          <div align=\"center\">\r\n            <button type=\"submit\" className=\"button\">\r\n              <span>Start Chatting</span>\r\n            </button>\r\n          </div>\r\n          <h2 className=\"error\">{error}</h2>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\nimport { ChatEngine } from \"react-chat-engine\";\nimport ChatFeed from \"./components/ChatFeed\";\nimport './App.css'\nimport LoginForm from \"./components/LoginForm\";\n\nconst App = () => {\n\n  if(!localStorage.getItem('username')) return <LoginForm/>\n\n  return( \n  \n    <ChatEngine\n\t\t\theight='100vh'\n\t\t\tuserName={localStorage.getItem('username')}\n\t\t\tuserSecret={localStorage.getItem('password')}\n\t\t\tprojectID='ab8d140c-2da4-4334-9022-e176440b11ac'\n      renderChatFeed={(chatAppProps)=> <ChatFeed {...chatAppProps}/>}\n\t\t/>\n  )\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}